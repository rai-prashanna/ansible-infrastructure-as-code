---
#- include: setup-RedHat.yml
#  when: ansible_os_family == 'RedHat'
#
#- include: setup-Debian.yml
#  when: ansible_os_family == 'Debian'

- debug: var="{{ kafka_public_ip }}"

#- name: Download and Uncompress Elasticsearch-1.7.0
#  become: yes
#  unarchive:
#    src: "{{download_link_elasticsearch}}"
#    dest: /home/ec2-user
#    remote_src: True
#    mode: 0777
#    owner: ec2-user 
#
#- name: change ownership recursively
#  become: yes
#  file:
#    path: /home/ec2-user/elasticsearch-1.7.0/
#    owner: ec2-user 
#    group: ec2-user 
#    mode: 0777    
#
#- name: Copy shell script into elastic node
#  become: yes
#  template:
#    src: elasticsearch.sh.j2
#    dest: /home/ec2-user/elasticsearch.sh
#    owner: "{{owner}}"
#    group: "{{group}}"
#    mode: 0777
#    force: yes
#
#- name: Copy elasticsearch.yml file into remote node
#  become: yes
#  template:
#    src: elasticsearch.yml.j2
#    dest: /home/ec2-user/elasticsearch-1.7.0/config/elasticsearch.yml 
#    owner: "{{owner}}"
#    group: "{{group}}"
#    mode: 0777
#    force: yes
#    
#- name: Install elasticsearch plugin 1 in remote shell
#  shell: nohup /home/ec2-user/elasticsearch-1.7.0/bin/plugin install mobz/elasticsearch-head </dev/null >/dev/null 2>&1 & 
#  register: info
#- debug: var=info  
#
#- name: Install elasticsearch plugin 2 in remote shell
#  shell: nohup /home/ec2-user/elasticsearch-1.7.0/bin/plugin -install statsd -url https://github.com/Automattic/elasticsearch-statsd-plugin/releases/download/v0.4.0/elasticsearch-statsd-0.4.0.zip </dev/null >/dev/null 2>&1 & 
#  register: info
#- debug: var=info 
#
#- name: Execute the command in remote shell
#  shell: nohup /home/ec2-user/elasticsearch-1.7.0/bin/elasticsearch </dev/null >/dev/null 2>&1 & 
#
#
#  
##- name: elastic-install | Ensure elastic directories exists
##  file:
##    path="{{ item }}"
##    state=directory
##    owner={{ elasticsearch_user }}
##    group={{ elasticsearch_group }}
##    recurse=yes
##  with_items:
##     - "{{ elasticsearch_work_dir }}"
##     - "{{ elasticsearch_home_dir }}"
##     - "{{ elasticsearch_log_dir }}"
##     - "{{ elasticsearch_data_dir }}"
##     - "{{ elasticsearch_work_dir }}"
##     - "{{ elasticsearch_conf_dir }}"
#    
#    
##- file:
##    src: '/tmp/{{ item.src }}'
##    dest: '{{ item.dest }}'
##    mode: 0777
##    owner: ec2-user
##  with_items:
##    - { src: 'x', dest: 'y' }
##    - { src: 'z', dest: 'k' }  
#
##- name: Configure Elasticsearch.
##  become: yes
##  template:
##    src: elasticsearch.yml.j2
##    dest: /etc/elasticsearch/elasticsearch.yml
##    owner: root
##    group: elasticsearch
##    mode: 0750
##  notify: restart elasticsearch
#
##- name: Start Elasticsearch.
##  service: name=elasticsearch state=started pattern=/usr/share/elasticsearch/bin/elasticsearch enabled=yes
##
##- name: Make sure Elasticsearch is running before proceeding.
##  wait_for: host={{ elasticsearch_network_host }} port={{ elasticsearch_http_port }} delay=3 timeout=300
